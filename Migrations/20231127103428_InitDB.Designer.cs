// <auto-generated />
using System;
using CarRental.Repositories.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRental.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231127103428_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarRental.Entities.ApprovalApplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ApprovalApplications");
                });

            modelBuilder.Entity("CarRental.Entities.FollowVehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("PostVehicleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PostVehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("FollowVehicles");
                });

            modelBuilder.Entity("CarRental.Entities.PostVehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleFuel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleSeat")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PostVehicles");
                });

            modelBuilder.Entity("CarRental.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("TrustPoint")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Hà Nội",
                            Avatar = "/user-content/default-user.png",
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "i2yBMU+FxDo=",
                            Phone = "0123456789",
                            Role = 0,
                            Status = true,
                            TrustPoint = 0.0
                        });
                });

            modelBuilder.Entity("CarRental.Entities.UserRentVehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PostVehicleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PostVehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRentVehicles");
                });

            modelBuilder.Entity("CarRental.Entities.UserReviewVehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PostVehicleId")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("TrustPoint")
                        .HasColumnType("float");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PostVehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserReviewVehicles");
                });

            modelBuilder.Entity("CarRental.Entities.ApprovalApplication", b =>
                {
                    b.HasOne("CarRental.Entities.User", "User")
                        .WithOne("ApprovalApplication")
                        .HasForeignKey("CarRental.Entities.ApprovalApplication", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Entities.FollowVehicle", b =>
                {
                    b.HasOne("CarRental.Entities.PostVehicle", "PostVehicle")
                        .WithMany("FollowVehicles")
                        .HasForeignKey("PostVehicleId");

                    b.HasOne("CarRental.Entities.User", "User")
                        .WithMany("FollowVehicles")
                        .HasForeignKey("UserId");

                    b.Navigation("PostVehicle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Entities.PostVehicle", b =>
                {
                    b.HasOne("CarRental.Entities.User", "User")
                        .WithMany("PostVehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Entities.UserRentVehicle", b =>
                {
                    b.HasOne("CarRental.Entities.PostVehicle", "PostVehicle")
                        .WithMany("UserRentCars")
                        .HasForeignKey("PostVehicleId");

                    b.HasOne("CarRental.Entities.User", "User")
                        .WithMany("UserRentVehicles")
                        .HasForeignKey("UserId");

                    b.Navigation("PostVehicle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Entities.UserReviewVehicle", b =>
                {
                    b.HasOne("CarRental.Entities.PostVehicle", "PostVehicle")
                        .WithMany("UserRewviewCars")
                        .HasForeignKey("PostVehicleId");

                    b.HasOne("CarRental.Entities.User", "User")
                        .WithMany("UserReviewVehicles")
                        .HasForeignKey("UserId");

                    b.Navigation("PostVehicle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Entities.PostVehicle", b =>
                {
                    b.Navigation("FollowVehicles");

                    b.Navigation("UserRentCars");

                    b.Navigation("UserRewviewCars");
                });

            modelBuilder.Entity("CarRental.Entities.User", b =>
                {
                    b.Navigation("ApprovalApplication");

                    b.Navigation("FollowVehicles");

                    b.Navigation("PostVehicles");

                    b.Navigation("UserRentVehicles");

                    b.Navigation("UserReviewVehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
